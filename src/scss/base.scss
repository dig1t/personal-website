/* todo
 * - set color variables for all styles
 * - different types of tables
*/

@import 'config';

// Reset

* {
	background: transparent;
	color: inherit;
	margin: 0;
	border: 0;
	padding: 0;
	font-family: inherit;
	
	&, &:before, &:after {
		box-sizing: border-box;
	}
	
	&:focus {
		outline: none;
	}
}

body {
	zoom: 0;
	font-size: 62.5%;
	-webkit-font-smoothing: antialiased;
}

ui {
	display: block;
}

section {
	position: relative;
	overflow: hidden;
}

h1 { font-size: type-scale(3); }
h2 { font-size: type-scale(2); }
h3 { font-size: type-scale(1); }
h4 { font-size: type-scale(0); }


a, em, p, strong, u {
	font-size: type-scale(0);
	line-height: type-scale(0);
}

a {
	color: #0062f9;
	text-decoration: none;
	
	&:hover {
		text-decoration: none;
	}
}

img {
	display: block;
}

button {
	cursor: pointer;
}

button > a {
	color: inherit;
}

select, input, textarea {
	color: $black;
	background-color: #fff;
	width: 100%;
	border: 1px solid lighten($black, 50%);
	border-radius: 3px;
	padding: 6px;
	font-size: type-scale(0);
	display: block;
	
	&:focus {
		border-color: $black;
	}
}

textarea {
	resize: none;
}

input[type="submit"] {
	color: #fff;
	background-color: #3284ff;
	border: 0;
	border-radius: 0;
	padding: 6px 12px;
	font-size: 18px;
	cursor: pointer;
	
	&:hover {
		background-color: #2d76e4;
	}
	
	&:active {
		background-color: #3880eb;
	}
}

input.ok {
	border-color: #55dc7d;
}

input.error {
	border-color: #f75252;
}

label {
	input {
		margin-right: 2px;
		display: inline-block;
	}
	
	span {
		display: inline-block;
		vertical-align: middle;
		cursor: pointer;
	}
}

li {
	list-style-type: none;
}

table {
	background-color: transparent;
	width: 100%;
	border-collapse: separate;
	border-spacing: 0;
}

td, th {
	background: $white;
	margin: 4px;
	border-bottom: 1px solid #d5d5d5;
	padding: 8px 12px;
	font-size: type-scale(0);
	text-align: left;
	
	&:first-child {
		padding-left: 0;
	}
}

@include breakpoint(phone-large) {
	td, th {
		padding: 4px 8px;
	}
}

.scroll {
	$scrollbar-width: 8px;
	$margin: 8px;
	
	&__track {
		width: $scrollbar-width + ($margin * 2);
		position: absolute;
		top: $margin;
		bottom: $margin;
		right: 0;
		
		&:hover .scroll__slider {
			opacity: .8;
		}
	}
	
	&__slider {
		background-color: black;
		height: 100%; // 10% + 25px main element padding - half size of scrollbar
		width: $scrollbar-width;
		border-radius: $scrollbar-width / 2;
		position: absolute;
		left: $margin;
		top: 0;
		transition: opacity .2s;
		opacity: 0;
	}
}

// Pseudo Styles

::selection,
::-moz-selection,
::-webkit-selection {
	background-color: #d4e2f7;
	color: #2f2f2f;
}

::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-thumb {
  background-color: #3f3f3f;
}

::-webkit-scrollbar-thumb:window-inactive {
	background-color: #4f4f4f;
}

// Grid

$gutter: 30px;

.row {
  margin-left: ($gutter / -2);
  margin-right: ($gutter / -2);
  
  &, &-ng {
    clear: both;
  	
  	&:before, &:after {
  		content: ' ';
  		display: table;
  		clear: both;
  	}
  }
}

$grid-letters: (12: xl, 9: l, 6: m, 3: s);

@for $i from 12 through 1 {
	$property: unquote("#{unquote(".col-")}#{$i}");
	$property-offset: unquote("#{unquote(".col-offset-")}#{$i}");
	$width: percentage($i / 12);
	
	@if map-has-key($grid-letters, $i) {
		$property: #{$property} unquote(', .col-')#{map-get($grid-letters, $i)};
		$property-offset: #{$property-offset} unquote(', .col-offset-')#{map-get($grid-letters, $i)};
	}
	
	#{$property} {
    padding-left: ($gutter / 2);
    padding-right: ($gutter / 2);
    
    &, &-ng {
      width: $width;
    }
	}
	
	@include breakpoint(tablet-large, 'min-width') {
		#{$property-offset} {
	    &, &-ng {
	      margin-left: $width;
	    }
		}
	}
}

div.col, div[class*="col-"] {
	float: left;
	vertical-align: top;
}